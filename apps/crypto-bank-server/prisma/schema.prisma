datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model SmartContract {
  code      String?
  createdAt DateTime                 @default(now())
  id        String                   @id @default(cuid())
  name      String?
  ownerId   String?
  status    EnumSmartContractStatus?
  updatedAt DateTime                 @updatedAt
}

model Transaction {
  amount    Float?
  createdAt DateTime               @default(now())
  id        String                 @id @default(cuid())
  status    EnumTransactionStatus?
  updatedAt DateTime               @updatedAt
  wallet    Wallet?                @relation(fields: [walletId], references: [id])
  walletId  String?
}

model Wallet {
  address      String?
  balance      Float?
  createdAt    DateTime             @default(now())
  id           String               @id @default(cuid())
  transactions Transaction[]
  typeField    EnumWalletTypeField?
  updatedAt    DateTime             @updatedAt
  user         User?                @relation(fields: [userId], references: [id])
  userId       String?
}

model AuditLog {
  action      String?
  createdAt   DateTime  @default(now())
  description String?
  id          String    @id @default(cuid())
  timestamp   DateTime?
  updatedAt   DateTime  @updatedAt
  user        User?     @relation(fields: [userId], references: [id])
  userId      String?
}

model User {
  auditLogs        AuditLog[]
  createdAt        DateTime      @default(now())
  email            String?       @unique
  firstName        String?
  id               String        @id @default(cuid())
  lastName         String?
  password         String
  role             EnumUserRole?
  roles            Json
  twoFactorEnabled Boolean?
  updatedAt        DateTime      @updatedAt
  username         String        @unique
  wallets          Wallet[]
}

enum EnumSmartContractStatus {
  Option1
}

enum EnumTransactionStatus {
  Option1
}

enum EnumWalletTypeField {
  Option1
}

enum EnumUserRole {
  Option1
}
